" Double <Esc><Esc> to auto-save
map <Esc><Esc> :w<CR>


" Preserve indentation while pasting text from the OS X clipboard
" noremap <leader>p :set paste<CR>:put  *<CR>:set nopaste<CR>
set pastetoggle=<F2>


" Make NERDTree update current working directory
let g:NERDTreeChDirMode = 2
let g:NERDTreeWinPos = 'right'
let g:NERDTreeQuitOnOpen = 1

" Custom mapping to toggle NERDTree with ,N
nmap <leader>l :NERDTreeToggle<CR>

" Auto open NERDTree
" au VimEnter *  NERDTree


let g:ctrlp_by_filename = 0
" This seems to be necessary for putting tags in .git/tags
let g:ctrlp_working_path_mode = 'ra'

" CtrlP shortcut to search tags, recent files and buffer
nnoremap <silent> <leader>jt :CtrlPTag<CR>
nnoremap <silent> <leader>jr :CtrlPMRUFiles<CR>
nnoremap <silent> <leader>jb :CtrlPBuffer<cr>


" Make quick global search with Ag
map <leader>g* :Ag<CR>
vnoremap <leader>g* y:Ag "<C-R>""<CR>


" Remap , to ,; since , is now the leader key
nmap <leader>; <Plug>SneakPrevious


" Change the default EasyMotion shading to something more readable with Solarized
" http://stackoverflow.com/questions/6126871/easymotion-coloring-in-vim-with-solarized-theme
hi link EasyMotionTarget ErrorMsg
hi link EasyMotionShade  Comment


" Zoom / Restore window.
" http://stackoverflow.com/questions/13194428/is-better-way-to-zoom-windows-in-vim-than-zoomwin
function! s:ZoomToggle() abort
  if exists('t:zoomed') && t:zoomed
    exec t:zoom_winrestcmd
    let t:zoomed = 0
  else
    let t:zoom_winrestcmd = winrestcmd()
    resize
    vertical resize
    let t:zoomed = 1
  endif
endfunction

command! ZoomToggle call s:ZoomToggle()
nnoremap <silent> <leader>f :ZoomToggle<CR>


" Use ALT + j / k to move lines up and down
" Found here: http://stackoverflow.com/questions/7501092/can-i-map-alt-key-in-vim
" http://vim.wikia.com/wiki/Moving_lines_up_or_down
nnoremap ∆ :m .+1<CR>==
nnoremap ˚ :m .-2<CR>==
inoremap ∆ <Esc>:m .+1<CR>==gi
inoremap ˚ <Esc>:m .-2<CR>==gi
vnoremap ∆ :m '>+1<CR>gv=gv
vnoremap ˚ :m '<-2<CR>gv=gv
